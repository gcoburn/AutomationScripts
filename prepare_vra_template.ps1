#==============================================
# Generated On: 01/28/2016
# Generated By: Gary Coburn
# Automation Specialist
# Organization: VMware
# Twitter: @coburnGary
# GuestAgent install script v1
#==============================================
#----------------------------------------------
#==================USAGE=======================
# Only tested and for use on Windows 2012 R2 Server
#----------------------------------------------
#===============REQUIREMENTS ===================
# For this script to run successfully be sure:
# 	*To run PowerShell as administrator
#	*To have admin rights on the server
#----------------------------------------------

    param(
      [string]$vRAurl="",
      [string]$IaaS="",
      [string]$Password=""
    )

# ----------------------------------------
# 		CHECK POWERSHELL SESSION
# ----------------------------------------
$Elevated = New-Object Security.Principal.WindowsPrincipal( [Security.Principal.WindowsIdentity]::GetCurrent() )
& {
    if ($Elevated.IsInRole( [Security.Principal.WindowsBuiltInRole]::Administrator ))
    {

        write-host "PowerShell is running as an administrator." -ForegroundColor Green
    } Else {
		throw "Powershell must be run as an adminstrator."
	}

    if( [IntPtr]::size * 8 -eq 64 )
    {
		Write-Host "You are running 64-bit PowerShell" -ForegroundColor Green

    }
    else
    {
		Write-Host "You are running 32-bit PowerShell" -ForegroundColor Red
		Throw "Please run using 64-bit PowerShell as administrator"
    }
}
# ----------------------------------------
# 		END OF POWERSHELL CHECK
# ----------------------------------------

#=============EDITOR'S NOTE====================
# In order for this script to work
# You will either need .NET 3.5 already installed or access
# to the internet for install purposes.

# ----------------------------------------
#   USER CONFIGURATION - EDIT AS NEEDED
# ----------------------------------------

# If this is unattended then these will be set by the parameters
# Otherwise you can preset these for run time or simply answer the prompts

# $vRAurl = "virtual_appliance_hostname.fqdn"
# $IaaS = "windows_server_hostname.fqdn"
# $Password = "password"

# ----------------------------------------
# 		END OF USER CONFIGURATION
# ----------------------------------------


# ----------------------------------------
# 		Install Script
# ----------------------------------------

# Creating Directory and Log file path
New-Item -ItemType Directory -Force -Path C:\opt
Start-Transcript -Path "c:\opt\AgentInstall.txt"

"Validating if the proper values are set" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
# Accept parameters if you are passing this via vRO
if (!$vRAurl) {
  "User configuration not set and no command line parameters detected " | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Red
  $vRAurl = read-Host -Prompt "What is the fqdn of your vRA Appliance? (vraServer.domain)  "
  $IaaS = read-Host -Prompt "What is fqdn of your IaaS Server? (ex. windowsServer.domain)  "
  $Password = read-Host -Prompt "What would you like the password for the darwin user to be?  "
}
"The following values have been set" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
"vRA Appliance is $vRAurl " | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
"IaaS server is $IaaS " | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
"Password is ******** " | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green


# Adding the .NET framework
"Adding .NET 3.5 features" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
Install-WindowsFeature -name NET-Framework-Core
".NET 3.5 features installed" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green

"Creating directory structure needed " | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
New-Item -ItemType Directory -Force -Path C:\opt\vmware-jre
New-Item -ItemType Directory -Force -Path C:\opt\bootstrap
"Directories Created " | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green

#functions
#Download function called to pull the files
function downloadNeededFiles($url,$file)
{
    "$file Downloading" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
    [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}
    $clnt = New-Object System.Net.WebClient
    $clnt.DownloadFile($url,$file)
    "$file Downloaded" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
}

#Extract the zip files downloaded
function extractZip($file,$dest)
{
    "$file extracting files" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
    $shell = new-object -com shell.application
    if (!(Test-Path "$file"))
    {
        throw "$file does not exist"
    }
    New-Item -ItemType Directory -Force -Path $dest -WarningAction SilentlyContinue
    $shell.namespace($dest).copyhere($shell.namespace("$file").items())
    "$file extracted" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
}


# Starting Script steps

# Download and Extract the JRE components

"The URL specified is $vRAurl" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
"Downloading JRE zip" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
$url="https://" + $vRAurl + ":5480/service/software/download/jre-1.8.0_66-win64.zip"
"The full URL to your JRE file is $url" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
$file="c:\opt\jre.zip"
$dest="c:\opt\vmware-jre\"
# Call Download Function
downloadNeededFiles $url $file
# Call Extract Function
extractZip $file $dest

# Pull and execute the Guest Agent Installer
"Downloading Guest Agent" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
$url="https://" + $vRAurl + ":5480/installer/GuestAgentInstaller_x64.exe"
"The full URL to your GuestAgentInstaller file is $url" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
$file="c:\GuestAgentInstaller_x64.exe"
# Call Download Function
downloadNeededFiles $url $file
"Executing: $file" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
cd c:\
Start-Process C:\GuestAgentInstaller_x64.exe -Wait -PassThru
"$file Executed" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green

# Execute the winservice to put our Agent ready at start up
"The fqdn you specificed is $IaaS" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
$IaaSwithPort=$IaaS + ":443"
$argumentList = " -i -h $IaaSwithPort -p ssl"
"Command we run will be winservice.exe & $argumentList" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
cd c:\VRMGuestAgent
"Executing winservice" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
$winservicefile = ("winservice.exe")
$gugentInstall = Start-Process $winservicefile -ArgumentList $argumentList -Wait -PassThru
"Execution of winservice complete" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green

# Download and execute vRA bootstrap agent
"Downloading Bootstrap" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
cd C:\opt\bootstrap
$url="https://" + $vRAurl + ":5480/service/software/download/vmware-vra-software-agent-bootstrap-windows_7.0.0.0.zip"
"The full URL to your bootstrap file is $url" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
$file="c:\opt\bootstrap\bootstrap.zip"
$dest="c:\opt\bootstrap\"
# Call Download Function
downloadNeededFiles $url $file
# Call Extract Function
extractZip $file $dest

"Executing install.bat" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Yellow
$bootstrapFile = ("install.bat")
$argumentList = " password=$Password managerServiceHost=$IaaS cloudProvider=vsphere"
"Command we run will be install.bat & $argumentList" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green
$bootstrapInstall = Start-Process $bootstrapFile -ArgumentList $argumentList -Wait | Out-File -FilePath C:\opt\AgentInstall.txt -Append
"Execution of install.bat complete" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green

"INSTALL COMPLETE! Ready for shutdown" | Tee-Object -FilePath C:\opt\agentinstall.txt -Append | Write-Host -ForegroundColor Green

# ----------------------------------------
# 		Install Script Complete
# ----------------------------------------
